events {

}

http {
  error_log /etc/nginx/error_log.log warn;
  client_max_body_size 20m;

  #proxy_cache_path /etc/nginx/cache keys_zone=staticcache:500m max_size=1000m;
  proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=staticcache:8m max_size=100m inactive=60m use_temp_path=off;

  server {
    listen 80 default_server;

    #proxy_cache staticcache;
    #proxy_cache_key $request_method$request_uri;
    #proxy_cache_min_uses 1; # tells the minimum number of times (1 time) a resource has been requested before it is cached
    #proxy_cache_methods GET;
    #proxy_cache_valid 200 1y; # expire 1 year

    # Helpful headers to pass to Node.js
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme; #http pr https
    proxy_set_header X-Real-IP $remote_addr; #client IP address
    # List of IP addresses client has been proxied through until now
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 5m; # cache successful responses for 60 minutes
    proxy_cache_valid 404 1m; # expire 404 responses 1 minute

    location / {
      proxy_pass http://server:3000;
    }

    # Only cache static files; don't cache the dynamic API response!
    location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|bmp|js|html|htm)$ {
      proxy_cache staticcache; # Use "staticcache" we defined above
      proxy_cache_bypass $http_cache_control; # Support client "Cache-Control: no-cache" directive
      add_header X-Proxy-Cache $upstream_cache_status; # Hit or Miss

      # Nginx cache to ignore Node.js default "Cache-Control: public, max-age=0"
      # and don't pass it on to clients
      proxy_ignore_headers Cache-Control;
      proxy_hide_header Cache-Control;
      expires 60m; # "Cache-Control: max-age=3600" tells client to cache for 60 minutes

      proxy_pass http://server:3000;
    }

    #listen 443 ssl;
    #ssl_certificate /etc/letsencrypt/live/server2.your.domain/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/server2.your.domain/privkey.pem;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
  }
}